[{"/home/sherazi/PSTUFF/CHAEBAN ICE CREAM/GITHUB/InputOutputReact/src/App.js":"1","/home/sherazi/PSTUFF/CHAEBAN ICE CREAM/GITHUB/InputOutputReact/src/Routes/index.js":"2","/home/sherazi/PSTUFF/CHAEBAN ICE CREAM/GITHUB/InputOutputReact/src/Pages/Inputpage.js":"3","/home/sherazi/PSTUFF/CHAEBAN ICE CREAM/GITHUB/InputOutputReact/src/Components/Textarea.js":"4","/home/sherazi/PSTUFF/CHAEBAN ICE CREAM/GITHUB/InputOutputReact/src/Components/Preview.js":"5","/home/sherazi/PSTUFF/CHAEBAN ICE CREAM/GITHUB/InputOutputReact/src/Components/Dialog.js":"6","/home/sherazi/PSTUFF/CHAEBAN ICE CREAM/GITHUB/InputOutputReact/src/index.js":"7","/home/sherazi/PSTUFF/CHAEBAN ICE CREAM/GITHUB/InputOutputReact/src/Pages/Outputpage.js":"8","/home/sherazi/PSTUFF/CHAEBAN ICE CREAM/GITHUB/InputOutputReact/src/Components/Radiobuttons.js":"9","/home/sherazi/PSTUFF/CHAEBAN ICE CREAM/GITHUB/InputOutputReact/src/Components/Context/index.js":"10","/home/sherazi/PSTUFF/CHAEBAN ICE CREAM/GITHUB/InputOutputReact/src/Components/Datepicker.js":"11","/home/sherazi/PSTUFF/CHAEBAN ICE CREAM/GITHUB/InputOutputReact/src/Components/Tooltip.js":"12"},{"size":479,"mtime":1606766629654,"results":"13","hashOfConfig":"14"},{"size":431,"mtime":1606766629658,"results":"15","hashOfConfig":"14"},{"size":3350,"mtime":1606766629658,"results":"16","hashOfConfig":"14"},{"size":478,"mtime":1606766629654,"results":"17","hashOfConfig":"14"},{"size":615,"mtime":1606767150633,"results":"18","hashOfConfig":"14"},{"size":1757,"mtime":1606767146547,"results":"19","hashOfConfig":"14"},{"size":359,"mtime":1606766629658,"results":"20","hashOfConfig":"14"},{"size":1970,"mtime":1606766629658,"results":"21","hashOfConfig":"14"},{"size":2025,"mtime":1606767153811,"results":"22","hashOfConfig":"14"},{"size":531,"mtime":1606766629654,"results":"23","hashOfConfig":"14"},{"size":742,"mtime":1606767142049,"results":"24","hashOfConfig":"14"},{"size":203,"mtime":1606766629654,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"z0h00v",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"29"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"29"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"29"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"/home/sherazi/PSTUFF/CHAEBAN ICE CREAM/GITHUB/InputOutputReact/src/App.js",["56"],"import \"./styles/globalstyles.scss\";\nimport \"./styles/90s.scss\";\nimport \"./styles/funk.scss\";\nimport \"./styles/professional.scss\";\nimport { AppContext, AppProvider } from \"./Components/Context/index\";\n\nimport { BrowserRouter } from \"react-router-dom\";\nimport Routes from \"./Routes/index\";\n\nfunction App() {\n    return (\n        <AppProvider>\n            <BrowserRouter>\n                <Routes />\n            </BrowserRouter>\n        </AppProvider>\n    );\n}\n\nexport default App;\n",["57","58"],"/home/sherazi/PSTUFF/CHAEBAN ICE CREAM/GITHUB/InputOutputReact/src/Routes/index.js",[],"/home/sherazi/PSTUFF/CHAEBAN ICE CREAM/GITHUB/InputOutputReact/src/Pages/Inputpage.js",["59"],"import React, { useState, useContext } from \"react\";\nimport get from \"lodash/get\";\n// THEMES ARE DYNAMIC, FOR NOW JUST AS A POC I'VE TAKEN CLASS NAMES, AND LABEL TITLES\n// BUT FOR EXPANDING WE CAN TAKE ANY KEYS IN JSON/FROM API AND ADJUST OUR\nimport ThemesData from \"../config.json\";\nimport { useHistory } from \"react-router-dom\";\nimport { AppContext } from \"../Components/Context/index\";\nimport DateComponent from \"../Components/Datepicker\";\nimport Textarea from \"../Components/Textarea\";\nimport RadioButtons from \"../Components/Radiobuttons\";\nimport DialogBox from \"../Components/Dialog\";\n\nconst InputPage = ({}) => {\n    const [open, setOpen] = useState(false);\n    const [submitted, setSubmitted] = useState(false);\n    const [themeSettings, setThemeSettings] = useState();\n    const history = useHistory();\n    const appContext = useContext(AppContext);\n    // MAINTAIN USER'S SELECTION IN APP CONTEXT\n    const { contextState, setContextState } = appContext;\n\n    // HANDLE FORM SUBMIT\n    const handleSubmit = (e) => {\n        setSubmitted(true);\n        e.preventDefault();\n        if (!contextState.date || !contextState.text || !contextState.theme) {\n            return;\n        }\n        history.push({\n            pathname: \"/output\",\n            state: { contextState },\n        });\n    };\n\n    return (\n        <div>\n            <div className='inputpage-container'>\n                <h1 className='inputpage-title'>Input Page</h1>\n                <div className='form-container datepicker'>\n                    <label htmlFor='datepicker'>Please provide date</label>\n                    <DateComponent className='input-margin' state={contextState} setState={setContextState} />\n                    {submitted && !get(contextState, \"displayDate\") && (\n                        <span className='help-block'>* Date can't be empty</span>\n                    )}\n                </div>\n                <div className='form-container'>\n                    <label htmlFor='textArea'>Please provide message</label>\n                    <Textarea className='input-margin' state={contextState} setState={setContextState} />\n                    {submitted && !contextState.text && <span className='help-block'>* Message can't be empty</span>}\n                </div>\n                <div className='form-container'>\n                    <label>Choose Theme</label>\n                    <RadioButtons\n                        className='input-margin'\n                        state={contextState}\n                        setState={setContextState}\n                        ThemesData={ThemesData}\n                        setThemeSettings={setThemeSettings}\n                        setOpen={setOpen}\n                    />\n                    {submitted && !contextState.theme && <span className='help-block'>* Please select a theme</span>}\n                </div>\n                <button className='output-btn desk-only' onClick={handleSubmit}>\n                    Output\n                </button>\n                <DialogBox themeSettings={themeSettings} open={open} setOpen={setOpen} />\n            </div>\n            <div className='mobile-only sticky-bottom'>\n                <button className='output-btn' onClick={handleSubmit}>\n                    Output\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default InputPage;\n","/home/sherazi/PSTUFF/CHAEBAN ICE CREAM/GITHUB/InputOutputReact/src/Components/Textarea.js",["60","61"],"import React from \"react\";\n\nconst TextArea = ({ state, setState }) => {\n    const [value, setValue] = React.useState(\"\");\n\n    const handleChange = (event) => {\n        setState((prevState) => ({ ...prevState, text: event.target.value }));\n    };\n\n    return <textarea spellCheck={true} className='form-input' placeholder='Enter Message' id='textArea' label='Please provide message' rows={4} cols={10} value={state.text} onChange={handleChange} />;\n};\n\nexport default TextArea;\n","/home/sherazi/PSTUFF/CHAEBAN ICE CREAM/GITHUB/InputOutputReact/src/Components/Preview.js",[],"/home/sherazi/PSTUFF/CHAEBAN ICE CREAM/GITHUB/InputOutputReact/src/Components/Dialog.js",[],"/home/sherazi/PSTUFF/CHAEBAN ICE CREAM/GITHUB/InputOutputReact/src/index.js",[],"/home/sherazi/PSTUFF/CHAEBAN ICE CREAM/GITHUB/InputOutputReact/src/Pages/Outputpage.js",["62"],"import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Tooltip from \"../Components/Tooltip\";\nimport { faLongArrowAltLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { AppContext } from \"../Components/Context/index\";\n\nconst OutputPage = (props) => {\n    const appContext = useContext(AppContext);\n    const { contextState, setContextState } = appContext;\n    const history = useHistory();\n\n    // IF NO CONTEXT, ROUTE TO INPUT PAGE\n    if (!contextState.theme) {\n        history.push({\n            pathname: \"/\",\n        });\n        return null;\n    }\n\n    return (\n        <div className={`outputpage-wrapper ${contextState.theme.id}`}>\n            <div className='back-btn'>\n                <Tooltip text='Back to Input Page'>\n                    <Link to='/'>\n                        <FontAwesomeIcon icon={faLongArrowAltLeft} color='black' size='2x' />\n                    </Link>\n                </Tooltip>\n            </div>\n\n            <h1 className='outputpage-header'>{contextState.theme.title} Theme</h1>\n            <div className='outputpage-container'>\n                <div className='item'>\n                    <h3 className='item-header'>{contextState.theme.datePickerTitle}</h3>\n                    <p className='item-text'>{contextState.displayDate}</p>\n                </div>\n                <div className='item'>\n                    <h3 className='item-header'>{contextState.theme.messageTitle}</h3>\n                    <p className='item-text'>{contextState.text}</p>\n                </div>\n                <a href='https://github.com/syeddsherazi/InputOutputReact' className='github-link'>\n                    <button>\n                        <span>Check Github</span>\n                    </button>\n                </a>\n            </div>\n        </div>\n    );\n};\n\nexport default OutputPage;\n","/home/sherazi/PSTUFF/CHAEBAN ICE CREAM/GITHUB/InputOutputReact/src/Components/Radiobuttons.js",["63","64","65"],"import React from \"react\";\nimport get from \"lodash/get\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\nimport Tooltip from \"../Components/Tooltip\";\n\nconst RadioButtons = ({ state, setState, ThemesData, setOpen, setThemeSettings }) => {\n    const [value, setValue] = React.useState(\"\");\n\n    const handleChange = (event) => {\n        setValue(event.target.value);\n        const settings = ThemesData.filter((item) => item.id == event.target.value);\n        setThemeSettings(settings[0]);\n        setState((prevState) => ({ ...prevState, theme: settings[0] }));\n    };\n\n    const handlePreview = (theme) => {\n        setOpen(true);\n        const settings = ThemesData.filter((item) => item.title == theme);\n        setThemeSettings(settings[0]);\n    };\n\n    return (\n        <div>\n            {ThemesData.map((item, index) => {\n                return (\n                    <div className='radiobtn-wrapper' key={index}>\n                        <label className='radiobtn-container'>\n                            {item.title}\n                            <input\n                                onChange={handleChange}\n                                type='radio'\n                                name='theme'\n                                value={item.id}\n                                checked={get(state, \"theme.id\") === item.id}\n                            />\n                            <span className='checkmark'></span>\n                        </label>\n                        <Tooltip text='Preview Theme'>\n                            <FontAwesomeIcon\n                                onClick={() => handlePreview(item.title)}\n                                icon={faEye}\n                                color='black'\n                                size='sm'\n                            />\n                        </Tooltip>\n                    </div>\n                );\n            })}\n        </div>\n    );\n};\n\nexport default RadioButtons;\n","/home/sherazi/PSTUFF/CHAEBAN ICE CREAM/GITHUB/InputOutputReact/src/Components/Context/index.js",[],"/home/sherazi/PSTUFF/CHAEBAN ICE CREAM/GITHUB/InputOutputReact/src/Components/Datepicker.js",[],"/home/sherazi/PSTUFF/CHAEBAN ICE CREAM/GITHUB/InputOutputReact/src/Components/Tooltip.js",[],{"ruleId":"66","severity":1,"message":"67","line":5,"column":10,"nodeType":"68","messageId":"69","endLine":5,"endColumn":20},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":13,"column":20,"nodeType":"76","messageId":"77","endLine":13,"endColumn":22},{"ruleId":"66","severity":1,"message":"78","line":4,"column":12,"nodeType":"68","messageId":"69","endLine":4,"endColumn":17},{"ruleId":"66","severity":1,"message":"79","line":4,"column":19,"nodeType":"68","messageId":"69","endLine":4,"endColumn":27},{"ruleId":"66","severity":1,"message":"80","line":11,"column":27,"nodeType":"68","messageId":"69","endLine":11,"endColumn":42},{"ruleId":"66","severity":1,"message":"78","line":8,"column":12,"nodeType":"68","messageId":"69","endLine":8,"endColumn":17},{"ruleId":"81","severity":1,"message":"82","line":12,"column":62,"nodeType":"83","messageId":"77","endLine":12,"endColumn":64},{"ruleId":"81","severity":1,"message":"82","line":19,"column":65,"nodeType":"83","messageId":"77","endLine":19,"endColumn":67},"no-unused-vars","'AppContext' is defined but never used.","Identifier","unusedVar","no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'setContextState' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","no-global-assign","no-unsafe-negation"]